include_recipe 'ruby_platform::setup'
include_recipe 'ruby_platform::setup_zabbix'

packages = %W( zabbix-server-mysql zabbix-web-mysql zabbix-web-japanese zabbix-agent )
packages.each do |pkg|
  package "#{pkg}" do
    action [ :install, :upgrade ]
  end
end

bash "Setup php56" do
  code <<-EOC
    yum install -y php56 php56-devel php56-mbstring php56-mcrypt php56-mysqlnd php56-pdo php56-fpm php56-gd php56-bcmath php56-gmp
  EOC
end

include_recipe 'ruby_platform::ec2_db'

root_password = node["mysql"]["root_password"]
db_name = 'zabbix'
user_name     = 'zabbix'
user_password = 'password'

# create database
execute "create_db" do
  command "/usr/bin/mysql -u root -p#{root_password} < #{Chef::Config[:file_cache_path]}/create_db.sql"
  action :nothing
  not_if "/usr/bin/mysql -u root -p#{root_password} -D #{db_name}"
end

template "#{Chef::Config[:file_cache_path]}/create_db.sql" do
  owner "root"
  group "root"
  mode 0644
  source "create_db.sql.erb"
  variables({
                :db_name => db_name,
            })
  notifies :run, "execute[create_db]", :immediately
end

# create user
execute "create_user" do
  command "/usr/bin/mysql -u root -p#{root_password} < #{Chef::Config[:file_cache_path]}/create_user.sql"
  action :nothing
  not_if "/usr/bin/mysql -u #{user_name} -p#{user_password} -D #{db_name}"
end

template "#{Chef::Config[:file_cache_path]}/create_user.sql" do
  owner "root"
  group "root"
  mode 0644
  source "create_user.sql.erb"
  variables({
                :db_name => db_name,
                :username => user_name,
                :password => user_password,
            })
  notifies :run, "execute[create_user]", :immediately
end

execute "setup db" do
  command "zcat /usr/share/doc/zabbix-server-mysql-3.0.14/create.sql.gz | mysql -u#{user_name} -p#{user_password} #{db_name}"
  not_if "/usr/bin/mysql -u #{user_name} -p#{root_password} #{db_name} -e 'DESC users'"
end

template "/etc/zabbix/zabbix_server.conf" do
  owner "root"
  group "zabbix"
  mode 0644
  source "zabbix_server.conf.erb"
  variables({
                :db_name => db_name,
                :user_name => user_name,
                :user_password => user_password,
            })
end
